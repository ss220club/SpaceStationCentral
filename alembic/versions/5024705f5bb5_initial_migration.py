"""Initial migration

Revision ID: 5024705f5bb5
Revises: 
Create Date: 2025-02-28 16:30:04.602809

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel

# revision identifiers, used by Alembic.
revision: str = '5024705f5bb5'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('api_auth',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('token_hash', sqlmodel.sql.sqltypes.AutoString(length=64), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_api_auth_token_hash'), 'api_auth', ['token_hash'], unique=True)
    op.create_table('ckey_link_token',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('ckey', sqlmodel.sql.sqltypes.AutoString(length=32), nullable=False),
    sa.Column('token', sqlmodel.sql.sqltypes.AutoString(length=64), nullable=False),
    sa.Column('expiration_time', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_ckey_link_token_ckey'), 'ckey_link_token', ['ckey'], unique=True)
    op.create_index(op.f('ix_ckey_link_token_token'), 'ckey_link_token', ['token'], unique=True)
    op.create_table('player',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('discord_id', sqlmodel.sql.sqltypes.AutoString(length=32), nullable=False),
    sa.Column('ckey', sqlmodel.sql.sqltypes.AutoString(length=32), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_player_ckey'), 'player', ['ckey'], unique=True)
    op.create_index(op.f('ix_player_discord_id'), 'player', ['discord_id'], unique=True)
    op.create_table('donation',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('player_id', sa.Integer(), nullable=False),
    sa.Column('tier', sa.Integer(), nullable=False),
    sa.Column('issue_time', sa.DateTime(), nullable=False),
    sa.Column('expiration_time', sa.DateTime(), nullable=False),
    sa.Column('valid', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['player_id'], ['player.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_donation_player_id'), 'donation', ['player_id'], unique=False)
    op.create_table('whitelist',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('player_id', sa.Integer(), nullable=False),
    sa.Column('server_type', sqlmodel.sql.sqltypes.AutoString(length=32), nullable=False),
    sa.Column('admin_id', sa.Integer(), nullable=False),
    sa.Column('issue_time', sa.DateTime(), nullable=False),
    sa.Column('expiration_time', sa.DateTime(), nullable=False),
    sa.Column('valid', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['admin_id'], ['player.id'], ),
    sa.ForeignKeyConstraint(['player_id'], ['player.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_whitelist_player_id'), 'whitelist', ['player_id'], unique=False)
    op.create_index(op.f('ix_whitelist_server_type'), 'whitelist', ['server_type'], unique=False)
    op.create_index(op.f('ix_whitelist_valid'), 'whitelist', ['valid'], unique=False)
    op.create_table('whitelist_ban',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('player_id', sa.Integer(), nullable=False),
    sa.Column('server_type', sqlmodel.sql.sqltypes.AutoString(length=32), nullable=False),
    sa.Column('admin_id', sa.Integer(), nullable=False),
    sa.Column('issue_time', sa.DateTime(), nullable=False),
    sa.Column('expiration_time', sa.DateTime(), nullable=False),
    sa.Column('valid', sa.Boolean(), nullable=False),
    sa.Column('reason', sqlmodel.sql.sqltypes.AutoString(length=1024), nullable=True),
    sa.ForeignKeyConstraint(['admin_id'], ['player.id'], ),
    sa.ForeignKeyConstraint(['player_id'], ['player.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_whitelist_ban_player_id'), 'whitelist_ban', ['player_id'], unique=False)
    op.create_index(op.f('ix_whitelist_ban_server_type'), 'whitelist_ban', ['server_type'], unique=False)
    op.create_index(op.f('ix_whitelist_ban_valid'), 'whitelist_ban', ['valid'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_whitelist_ban_valid'), table_name='whitelist_ban')
    op.drop_index(op.f('ix_whitelist_ban_server_type'), table_name='whitelist_ban')
    op.drop_index(op.f('ix_whitelist_ban_player_id'), table_name='whitelist_ban')
    op.drop_table('whitelist_ban')
    op.drop_index(op.f('ix_whitelist_valid'), table_name='whitelist')
    op.drop_index(op.f('ix_whitelist_server_type'), table_name='whitelist')
    op.drop_index(op.f('ix_whitelist_player_id'), table_name='whitelist')
    op.drop_table('whitelist')
    op.drop_index(op.f('ix_donation_player_id'), table_name='donation')
    op.drop_table('donation')
    op.drop_index(op.f('ix_player_discord_id'), table_name='player')
    op.drop_index(op.f('ix_player_ckey'), table_name='player')
    op.drop_table('player')
    op.drop_index(op.f('ix_ckey_link_token_token'), table_name='ckey_link_token')
    op.drop_index(op.f('ix_ckey_link_token_ckey'), table_name='ckey_link_token')
    op.drop_table('ckey_link_token')
    op.drop_index(op.f('ix_api_auth_token_hash'), table_name='api_auth')
    op.drop_table('api_auth')
    # ### end Alembic commands ###
